@attribute [Route(Routes.Home)]

@if(!messages.Any()) {
	<div class="m-auto text-center align-self-center">
		<HxIcon CssClass="display-1 text-primary" Icon="BootstrapIcon.Robot"/>
		<h4>Jsem Adam, umělá inteligence postavená jako technologické demo Azure&nbsp;OpenAI.</h4>
		<p class="lead">Odpovídám na otázky o společnosti HAVIT.</p>
	</div>
}
<div class="messages mb-auto py-4 px-3">
	<HxRepeater Data="messages">
		<ItemTemplate Context="item">
			<div class="row justify-content-center">
				<div class="col-lg-6 d-flex gap-3 mb-4">
					@if (item.Role == Contracts.Chat.ChatRoleStub.Assistant)
					{
						<HxIcon CssClass="role-indicator bg-primary bg-opacity-10 text-primary" Icon="BootstrapIcon.Robot"/>
						<p class="assistant-message">@item.Content</p>
					}
					else // user message
					{
						<HxIcon CssClass="role-indicator bg-success bg-opacity-10 text-success" Icon="BootstrapIcon.PersonCircle"/>
						<p class="user-message">@item.Content</p>
					}
				</div>
			</div>
		</ItemTemplate>
	</HxRepeater>
</div>

<div class="py-4 sticky-bottom bg-white">
	<EditForm Model="@userMessageFormModel">
		<DataAnnotationsValidator />
		<div class="row justify-content-center">
			<div class="col-lg-6">
				<div class="position-relative">
					<HxInputText @ref="userMessageInputTextComponent" InputCssClass="pe-5" @bind-Value="userMessageFormModel.MessageText" />
					<HxSubmit OnValidClick="HandleValidSubmit" Size="ButtonSize.Small" CssClass="position-absolute top-50 end-0 translate-middle-y me-1" Color="ThemeColor.Primary" Icon="BootstrapIcon.Send" />
				</div>
			</div>
		</div>
	</EditForm>
</div>
